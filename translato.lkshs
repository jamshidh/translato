Version of session file format:
               1
Time of storage:
               "Thu Feb 20 10:29:19 PST 2014"
Layout:        VerticalP (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = -1, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [("Browser",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 290) 170),("Debug",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 1, detachedId = Nothing, detachedSize = Nothing}) 80)], paneTabs = Just BottomP, currentPage = 2, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 504) 1016
Population:    [(Just (BreakpointsSt BreakpointsState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (ErrorsSt ErrorsState),[SplitP RightP,SplitP TopP]),(Just (FilesSt FilesState),[SplitP RightP,SplitP TopP]),(Just (GrepSt GrepState),[SplitP RightP,SplitP TopP]),(Just (InfoSt (InfoState Nothing)),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP BottomP]),(Just (LogSt LogState),[SplitP RightP,SplitP BottomP]),(Just (ModulesSt (ModulesState 408 (SystemScope,False) (Nothing,Nothing) (ExpanderState {packageExp = ([],[]), packageExpNoBlack = ([],[]), packageDExp = ([],[]), packageDExpNoBlack = ([],[]), workspaceExp = ([],[]), workspaceExpNoBlack = ([],[]), workspaceDExp = ([],[]), workspaceDExpNoBlack = ([],[]), systemExp = ([],[]), systemExpNoBlack = ([],[])}))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP TopP]),(Just (SearchSt (SearchState {searchString = "", searchScope = SystemScope, searchMode = Prefix {caseSense = False}})),[SplitP RightP,SplitP TopP]),(Just (TraceSt TraceState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (VariablesSt VariablesState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (WorkspaceSt WorkspaceState),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP TopP]),(Just (BufferSt (BufferStateTrans "_Eval.hs" "86\n\n" 0)),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP TopP])]
Window size:   (1855,1056)
Completion size:
               (750,400)
Workspace:     Just "/home/jim/translato/translato.lkshw"
Active pane:   Just "Errors"
Toolbar visible:
               True
FindbarState:  (False,FindState {entryStr = "err", entryHist = ["err","addName","parseClass","parseFullClass","====","putStr","widgetF","Just","browser list","config","getStop","getChainOfFirsts"], replaceStr = "consumeTextNode", replaceHist = [], caseSensitive = True, entireWord = False, wrapAround = True, regex = True, lineNr = 40})
Recently opened files:
               ["/home/jim/translato/parser/src/GrammarParser.hs","/home/jim/translato/parser/src/Parser.hs","/home/jim/haskellTests/applicationIndicator/src/Main.hs","/home/jim/haskellTests/testSuite/src/Main.hs","/home/jim/translato/translato/src/Main.hs","/home/jim/translato/translato/src/Format.hs","/home/jim/translato/translato/src/Merger.hs","/home/jim/translato/translato/src/WidgetParser.hs","/home/jim/translato/translato/src/WidgetMerger.hs","/home/jim/translato/translato/src/WidgetFormatter.hs","/home/jim/translato/translato/src/Widget.hs","/home/jim/glowingMirror/server/src/Home.hs"]
Recently opened workspaces:
               ["/home/jim/glowingMirror/glowingMirror.lkshw","/home/jim/workGit/blogMaker/glowingMirror/glowingMirror.lkshw","/home/jim/workGit/blogMaker/blogMaker/glowingMirror.lkshw","/home/jim/blogMaker/blogMaker/blogMaker.lkshw","/home/jim/translato/translato.lkshw","/home/jim/audioFlashcards/audioFlashcards.lkshw","/home/jim/haskellTests/haskellTests.lkshw","/home/jim/funWithTemplates/funWithTemplates.lkshw","/home/jim/translato/parse.hs.lkshw","/home/jim/leksah.lkshw"]